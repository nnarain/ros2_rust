trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

container:
  image: osrf/ros:foxy-desktop
  options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

steps:
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
    displayName: Set up sudo

  - script: |
      sudo apt-get update
      sudo apt-get install -y \
        clang \
        libclang-dev \
        llvm-dev \
        python3-colcon-common-extensions \
        python3-vcstool
    displayName: Install APT dependencies

  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install Rust

  - script : |
      mkdir -p ~/ros2_rust_ws/src
      cd ~/ros2_rust_ws
      cp -av $(Build.Repository.LocalPath)/ros2_rust.repos .
      vcs import src < ros2_rust.repos
      rm -rfv ~/ros2_rust_ws/src/ros2_rust/ros2_rust
      cp -av $(Build.Repository.LocalPath) ~/ros2_rust_ws/src/ros2_rust/ros2_rust
    displayName: Set up workspace

  - script: |
      cd ~/ros2_rust_ws
      rosdep update && rosdep install -y --from src --ignore-src
    displayName: Install ROS dependencies

  - script: |
      source /opt/ros/foxy/setup.bash
      cd ~/ros2_rust_ws
      colcon build --packages-skip test_msgs
    displayName: Build ros2-rust (Linux)

  - script: |
      source /opt/ros/foxy/setup.bash
      cd ~/ros2_rust_ws
      colcon test --packages-select rclrs rclrs_common rclrs_examples rosidl_generator_rs
      colcon test-result --verbose
    displayName: Test ros2-rust (Linux)
